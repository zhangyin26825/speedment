package com.zhangyin.speedment.speedment.db0.sakila.film_text.generated;

import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.ShortIdentityMapper;
import com.speedment.config.db.mapper.identity.StringIdentityMapper;
import com.speedment.field.ComparableField;
import com.speedment.field.FieldIdentifier;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import com.zhangyin.speedment.speedment.db0.sakila.film_text.FilmText;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table speedment.db0.sakila.film_text.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedFilmText extends Entity<FilmText> {
    
    /**
     * This Field corresponds to the {@link FilmText} field that can be obtained
     * using the {@link FilmText#getFilmId()} method.
     */
    final ComparableField<FilmText, Short, Short> FILM_ID = new ComparableFieldImpl<>(Identifier.FILM_ID, FilmText::getFilmId, FilmText::setFilmId, new ShortIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link FilmText} field that can be obtained
     * using the {@link FilmText#getTitle()} method.
     */
    final StringField<FilmText, String> TITLE = new StringFieldImpl<>(Identifier.TITLE, FilmText::getTitle, FilmText::setTitle, new StringIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link FilmText} field that can be obtained
     * using the {@link FilmText#getDescription()} method.
     */
    final StringField<FilmText, String> DESCRIPTION = new StringFieldImpl<>(Identifier.DESCRIPTION, o -> o.getDescription().orElse(null), FilmText::setDescription, new StringIdentityMapper(), false);
    
    /**
     * Returns the filmId of this FilmText. The filmId field corresponds to the
     * database column db0.sakila.film_text.film_id.
     * 
     * @return the filmId of this FilmText
     */
    Short getFilmId();
    
    /**
     * Returns the title of this FilmText. The title field corresponds to the
     * database column db0.sakila.film_text.title.
     * 
     * @return the title of this FilmText
     */
    String getTitle();
    
    /**
     * Returns the description of this FilmText. The description field
     * corresponds to the database column db0.sakila.film_text.description.
     * 
     * @return the description of this FilmText
     */
    Optional<String> getDescription();
    
    /**
     * Sets the filmId of this FilmText. The filmId field corresponds to the
     * database column db0.sakila.film_text.film_id.
     * 
     * @param filmId to set of this FilmText
     * @return this FilmText instance
     */
    FilmText setFilmId(Short filmId);
    
    /**
     * Sets the title of this FilmText. The title field corresponds to the
     * database column db0.sakila.film_text.title.
     * 
     * @param title to set of this FilmText
     * @return this FilmText instance
     */
    FilmText setTitle(String title);
    
    /**
     * Sets the description of this FilmText. The description field corresponds
     * to the database column db0.sakila.film_text.description.
     * 
     * @param description to set of this FilmText
     * @return this FilmText instance
     */
    FilmText setDescription(String description);
    
    enum Identifier implements FieldIdentifier<FilmText> {
        
        FILM_ID ("film_id"),
        TITLE ("title"),
        DESCRIPTION ("description");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "db0";
        }
        
        @Override
        public String schemaName() {
            return "sakila";
        }
        
        @Override
        public String tableName() {
            return "film_text";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}